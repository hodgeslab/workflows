#!/bin/bash
#SBATCH --partition=normal
#SBATCH --export=NONE
#SBATCH --time=4:00:00
#SBATCH --ntasks=1
#SBATCH --cpus-per-task=8
#SBATCH --mem-per-cpu=8G
#SBATCH --output="%x.o%j"
#SBATCH --error="%x.e%j"

WORKDIR=XXWORKDIRXX
SAMPLENAME=XXSAMPLENAMEXX
GENOME=XXGENOMEXX

CENTERFRAGS=true
FRAGMENTLENGTH=200
TREATBED=${SAMPLENAME}.bed
FRAGMENTSBED=${SAMPLENAME}.fragments_${FRAGMENTLENGTH}bp.bed

cd $WORKDIR

# call peaks with MACS and make fragments file
module load python/2.7.5

if [ $GENOME = "hg38" ]; then

  if [ "$CENTERFRAGS" = true ]; then
    awk -v len=$FRAGMENTLENGTH 'BEGIN { OFS="\t"; while(getline < "/s1/share/UCSC_Downloads/hg38/chrom.sizes" > 0) chr[$1]=$2 } { start=$2-int(len/2); end=$3+int(len/2); if(start<1) start=1; if(end>chr[$1]) end=chr[$1]; $2=start; $3=start+len; print; $2=end-len; $3=end; $6="-"; print; }' $TREATBED | sort -k 1,1 -k 2,2n -k 3,3n -u > $FRAGMENTSBED
  else
    awk -v len=$FRAGMENTLENGTH 'BEGIN { OFS="\t"; while(getline < "/s1/share/UCSC_Downloads/hg38/chrom.sizes" > 0) chr[$1]=$2 } { if($6=="+") { $3=$2+len } else { $2=$3-len }; if($2<0) $2=0; if($3>chr[$1]) $3=chr[$1]; print; }' $TREATBED | sort -k 1,1 -k 2,2n -k 3,3n -u > $FRAGMENTSBED
  fi

  macs2 callpeak --treatment $FRAGMENTSBED --format BED --name $SAMPLENAME --gsize hs --nomodel

elif [ $GENOME = "hg19" ]; then

  if [ "$CENTERFRAGS" = true ]; then
    awk -v len=$FRAGMENTLENGTH 'BEGIN { OFS="\t"; while(getline < "/s1/share/UCSC_Downloads/hg19/chrom.sizes" > 0) chr[$1]=$2 } { start=$2-int(len/2); end=$3+int(len/2); if(start<1) start=1; if(end>chr[$1]) end=chr[$1]; $2=start; $3=start+len; print; $2=end-len; if($2<1) $2=1; $3=end; $6="-"; print; }' $TREATBED | sort -k 1,1 -k 2,2n -k 3,3n -u > $FRAGMENTSBED
  else
    awk -v len=$FRAGMENTLENGTH 'BEGIN { OFS="\t"; while(getline < "/s1/share/UCSC_Downloads/hg19/chrom.sizes" > 0) chr[$1]=$2 } { if($6=="+") { $3=$2+len } else { $2=$3-len }; if($2<0) $2=0; if($3>chr[$1]) $3=chr[$1]; print; }' $TREATBED | sort -k 1,1 -k 2,2n -k 3,3n -u > $FRAGMENTSBED
  fi

  macs2 callpeak --treatment $FRAGMENTSBED --format BED --name $SAMPLENAME --gsize hs --nomodel

elif [ $GENOME = "mm9" ]; then

  if [ "$CENTERFRAGS" = true ]; then
    awk -v len=$FRAGMENTLENGTH 'BEGIN { OFS="\t"; while(getline < "/s1/share/UCSC_Downloads/mm9/chrom.sizes" > 0) chr[$1]=$2 } { start=$2-int(len/2); end=$3+int(len/2); if(start<1) start=1; if(end>chr[$1]) end=chr[$1]; $2=start; $3=start+len; print; $2=end-len; $3=end; $6="-"; print; }' $TREATBED | sort -k 1,1 -k 2,2n -k 3,3n -u > $FRAGMENTSBED
  else
    awk -v len=$FRAGMENTLENGTH 'BEGIN { OFS="\t"; while(getline < "/s1/share/UCSC_Downloads/mm9/chrom.sizes" > 0) chr[$1]=$2 } { if($6=="+") { $3=$2+len } else { $2=$3-len }; if($2<0) $2=0; if($3>chr[$1]) $3=chr[$1]; print; }' $TREATBED | sort -k 1,1 -k 2,2n -k 3,3n -u > $FRAGMENTSBED
  fi

  macs2 callpeak --treatment $FRAGMENTSBED --format BED --name $SAMPLENAME --gsize mm --nomodel

fi

ln -s ${SAMPLENAME}_peaks.narrowPeak ${SAMPLENAME}_peaks.bed
